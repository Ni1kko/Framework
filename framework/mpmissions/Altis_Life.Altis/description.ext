overviewText = "$STR_MISC_overviewText";    // Text to be displayed below the overviewPicture on the mission selection screen when the mission is available to play.

OnLoadIntro = "";
OnLoadIntroTime = 0;
OnLoadMissionTime = 0;

disableRandomization[] = {"All"};
enableItemsDropping = 0;// Disable dropping items while swimming
allowProfileGlasses = 0;

showSquadRadar = 0;
showUAVFeed = 0;
showCompass = 0; // 0: disabled - 1: enabled. Default: 1
showGPS = 1; // 0: disabled - 1: enabled. Default: 1
showGroupIndicator = 1; // 0: disabled - 1: enabled. Default: 0
showWatch = 0; // 0: disabled - 1: enabled. Default: 1

forceRotorLibSimulation = 2;// https://community.bistudio.com/wiki/Description.ext#forceRotorLibSimulation
disableChannels[] = {0, 2};// https://community.bistudio.com/wiki/Description.ext#disableChannels
showHUD[] = {
	1, // Scripted HUD (same as showHUD command)
	0, // Vehicle and unit info
	0, // Vehicle radar [HIDDEN]
	0, // Vehicle compass [HIDDEN]
	0, // Tank direction indicator
	0, // Commanding menu
	0, // Group info bar
	1, // HUD weapon cursors
	0, // Vehicle display panels
	0, // "x killed by y" systemChat messages
	1  // force show drawIcon3D icons
};

enableDebugConsole[] = {"76561199109931625", "76561198147157388","76561198166293192"};
allowFunctionsRecompile = 0; // 0: disabled - 1: enabled. Default: 0
allowFunctionsLog = 1;// Allow RPT loging
unsafeCVL = 1; // Allows createVehicleLocal to be executed in Multiplayer

#include "dialog\MasterHandler.hpp"
#include "config\Config_Master.hpp"

class RscTitles {
    #include "dialog\progress.hpp"
    #include "dialog\hud_nameTags.hpp"
    #include "dialog\RscPlayerHUD.hpp"
    #include "dialog\deathScreen.hpp"
    #include "dialog\spitScreen.hpp"
};

class CfgFunctions 
{
    class MPClient 
    {
        class FiniteStateMachine
        {
            file="core\fsm"; 
            class timeModule {ext=".fsm";};
        };

        class Root
        {
            file = "core";
            class init {};
            class setupActions {};
            class setupEVH {};
            class survival {};
            class briefing {};
            class configuration {preInit = 1;};
            class setupStationService {};
        };
        
        class Antihack
        {
            file="core\antihack"; 
            class clientCrash {};
        };

        class Actions 
        {
            file = "core\actions";
            class arrestAction {};
            class buyLicense {};
            class captureHideout {};
            class catchFish {};
            class dpFinish {};
            class dropFishingNet {};
            class escortAction {};
            class gather {};
            class getDPMission {};
            class gutAnimal {};
            class healHospital {};
            class impoundAction {};
            class mine {};
            class newsBroadcast {};
            class packupSpikes {};
            class pickupItem {};
            class pickupMoney {};
            class postBail {};
            class processAction {};
            class pulloutAction {};
            class putInCar {};
            class removeContainer {};
            class repairTruck {};
            class restrainAction {};
            class robAction {};
            class searchAction {};
            class searchVehAction {};
            class seizePlayerAction {};
            class serviceChopper {};
            class stopEscorting {};
            class storeVehicle {};
            class surrender {};
            class spit {};
            class ticketAction {};
            class unrestrain {};
        };
        
        class Civilian 
        {
            file = "core\civilian";
            class initCiv {};
            class civMarkers {};
            class demoChargeTimer {};
            class freezePlayer {};
            class jail {};
            class jailMe {};
            class knockedOut {};
            class knockoutAction {};
            class removeLicenses {};
            class robPerson {};
            class robReceive {};
            class tazed {};
        };

        class Config 
        {
            file = "core\config";
            class houseConfig {};
            class itemWeight {};
            class vehicleAnimate {};
            class vehicleWeightCfg {};
        };

        class Cop 
        {
            file = "core\cop";
            class initCop {};
            class bountyReceive {};
            class containerInvSearch {};
            class copInteractionMenu {};
            class copLights {};
            class copMarkers {};
            class copSearch {};
            class copSiren {};
            class doorAnimate {};
            class fedCamDisplay {};
            class licenseCheck {};
            class licensesRead {};
            class questionDealer {};
            class radar {};
            class repairDoor {};
            class restrain {};
            class searchClient {};
            class seizeClient {};
            class sirenLights {};
            class spikeStripEffect {};
            class ticketGive {};
            class ticketPaid {};
            class ticketPay {};
            class ticketPrompt {};
            class vehInvSearch {};
            class wantedGrab {};
        };

        class Functions 
        {
            file = "core\functions";
            class AAN {};
            class accType {};
            class actionKeyHandler {};
            class animSync {};
            class autoruninit {};
            class autorunswitch {};
            class autoruntoggle {};
            class calWeightDiff {};
            class checkMap {};
            class clearVehicleAmmo {};
            class canspit {};
            class dropItems {};
            class escInterupt {};
            class fetchCfgDetails {};
            class fetchDeadGear {};
            class fetchVehInfo {};
            class isDamaged {};
            class giveDiff {};
            class handleDamage {};
            class handleInv {};
            class handleItem {};
            class hideObj {};
            class inventoryClosed {};
            class inventoryOpened {};
            class isUIDActive {};
            class keyupHandler {};
            class keydownHandler {};
            class loadDeadGear {};
            class loadGear {};
            class nearATM {};
            class nearestDoor {};
            class nearUnits {};
            class numberText {};
            class onFired {};
            class onTakeItem {};
            class playerSkins {};
            class playerTags {};
            class postNewsBroadcast {};
            class pullOutVeh {};
            class pushObject {};
            class receiveItem {};
            class receiveMoney {};
            class revealObjects {};
            class saveGear {};
            class simDisable {};
            class startLoadout {};
            class stripDownPlayer {};
            class spat {};
            class teleport {};
            class whereAmI {};
            class moveIn {};
            class switchSide {};
            class paychecks {};
            class buyLotteryTicket {};
            class bountySelect {};
            class spawnPlayer {};
        };

        class Gangs 
        {
            file = "core\gangs";
            class createGang {};
            class gangCreated {};
            class gangDisband {};
            class gangDisbanded {};
            class gangInvite {};
            class gangInvitePlayer {};
            class gangKick {};
            class gangLeave {};
            class gangMenu {};
            class gangNewLeader {};
            class gangUpgrade {};
            class initGang {};
        };

        class Gui 
        {
            file = "core\gui";
            class cameraZoomIn {};
            class bankDeposit {};
            class bankTransfer {};
            class bankWithdraw {};
            class displayHandler {};
            class gangBankResponse {};
            class garageLBChange {};
            class garageMenu {};
            class progressBar {};
            class safeFix {};
            class safeInventory {};
            class safeOpen {};
            class safeTake {};
            class sellGarage {};
            class setMapPosition {};
            class spawnConfirm {};
            class spawnMenu {};
            class spawnPointCfg {};
            class spawnPointSelected {};
            class unimpound {};
            class useGangBank {};
            class vehicleGarage {};
            class wireTransfer {};
            class hasDisplay {};
            class createRscLayer {};
            class destroyRscLayer {};
            class filterGarage {};
            class setLoadingText {};
            class abort {};
            class gui_hook_management {}; 
            class gui_renderGrenadePanel {};
            class gui_renderGroupPanel {};
            class gui_renderNotifications {};
            class gui_renderPartyESP {};
            class gui_renderStatsPanel {};
            class gui_renderVehiclePanel {};
            class gui_renderWaypoints {};
            class gui_renderWeaponPanel {};
        };

        class Housing 
        {
            file = "core\housing";
            class buyHouse {};
            class buyHouseGarage {};
            class containerMenu {};
            class copBreakDoor {};
            class copHouseOwner {};
            class garageRefund {};
            class getBuildingPositions {};
            class houseMenu {};
            class initHouses {};
            class lightHouse {};
            class lightHouseAction {};
            class lockHouse {};
            class lockupHouse {};
            class placeContainer {};
            class PlayerInBuilding {};
            class raidHouse {};
            class sellHouse {};
            class sellHouseGarage {};
        };
        
        class Tents 
        {
            file = "core\tents";
            class deployTent {};
            class packupTent {};
            class initTents {};
            class tentMenu {};
        };

        class Items 
        {
            file = "core\items";
            class blastingCharge {};
            class boltcutter {};
            class defuseKit {};
            class flashbang {};
            class jerrycanRefuel {};
            class jerryRefuel {};
            class lockpick {};
            class placestorage {};
            class spikeStrip {};
            class storageBox {}; 
        };

        class Medical
        {
            file = "core\medical";
            class initMed {};
            class deathScreen {};
            class deathScreenKeyHandler {};
            class medicLights {};
            class medicMarkers {};
            class medicRequest {};
            class medicSiren {};
            class medicSirenLights {};
            class onPlayerKilled {};
            class requestMedic {};
            class respawned {};
            class revived {};
            class revivePlayer {};
        };

        class Medical_Agony
        {
            file = "core\medical\agony";
            //main damage handler
            class Agony {};
            class KilledInAgony {};
            
            //add or remove effects
            class addBuff {};
            class removeBuff {};

            //effects
            class effects_bleeding {};
            class effects_critHit {};
            class effects_painShock {};
        };

        class Network 
        {
            file = "core\functions\network";
            class broadcast {};
            class corpse {};
            class jumpFnc {};
            class say3D {};
            class setFuel {};
            class soundDevice {};
            class bountyHunterTaze {};
        };

        class Player_Menu 
        {
            file = "core\pmenu";
            class cellphone {};
            class giveItem {};
            class giveMoney {};
            class keyDrop {};
            class keyGive {};
            class keyMenu {};
            class p_openMenu {};
            class p_updateMenu {};
            class pardon {};
            class removeItem {};
            class s_onChar {};
            class s_onCheckedChange {};
            class s_onSliderChange {};
            class settingsMenu {};
            class updateViewDistance {};
            class useItem {};
            class wantedAddP {};
            class wantedInfo {};
            class wantedList {};
            class wantedMenu {};
        };

        class Rebel
        {
            file = "core\rebel";
            class initReb {};
        };

        class Shops 
        {
            file = "core\shops";
            class 3dPreviewDisplay {};
            class 3dPreviewExit {};
            class 3dPreviewInit {};
            class atmMenu {};
            class buyClothes {};
            class changeClothes {};
            class chopShopMenu {};
            class chopShopSelection {};
            class chopShopSell {};
            class chopShopSold {};
            class clothingFilter {};
            class clothingMenu {};
            class fuelLBchange {};
            class fuelStatOpen {};
            class levelCheck {};
            class vehicleShopBuy {};
            class vehicleShopLBChange {};
            class vehicleShopMenu {};
            class virt_buy {};
            class virt_menu {};
            class virt_sell {};
            class virt_update {};
            class weaponShopAccs {};
            class weaponShopBuySell {};
            class weaponShopFilter {};
            class weaponShopMags {};
            class weaponShopMenu {};
            class weaponShopSelection {};
        };

        class Session 
        {
            file = "core\session";
            class dataQuery {};
            class insertPlayerInfo {};
            class requestReceived {};
            class syncData {};
            class updatePartial {};
            class updateRequest {};
        };

        class Utils 
        {
            file = "core\utils";
            class util_canautorun {};
            class util_math_round {};
            class util_array_toLower {};
            class util_getVehicleRole {};
            class util_getNearestLocationName {};
            class util_needsReload {};
            class util_getTerrainGradient {};
        };

        class Vehicle
        {
            file = "core\vehicle";
            class addVehicle2Chain {};
            class colorVehicle {};
            class deviceMine {};
            class FuelRefuelcar {};
            class fuelStore {};
            class fuelSupply {};
            class lockVehicle {};
            class openInventory {};
            class vehiclecolor3DRefresh {};
            class vehicleOwners {};
            class vehicleWeight {};
            class vehInventory {};
            class vehStoreItem {};
            class vehTakeItem {};
            class vInteractionMenu {};
        };
    };
};

class CfgRemoteExec {
    #define F(NAME,TARGET) class NAME { \
        allowedTargets = TARGET; \
    };
    #define JIP(NAME,TARGET) class NAME { \
        allowedTargets = TARGET; \
        jip = 1; \
    };

    #define ANYONE 0
    #define CLIENT 1
    #define SERVER 2
    #define HC extdb_var_database_headless_client
    
    class Functions {
        // RemoteExec modes:
		// 0 - disabled
		// 1 - allowed, taking whitelist into account
		// 2 - allowed, ignoring whitelist (default, because of backward compatibility)
		mode = 2;// 2 while we are developing

		// Ability to send JIP messages:
		// 0 - disable JIP messages
		// 1 - allow JIP messages (default)
		jip = 1;

		//-- Whitelist
        /* Client only functions */
            F(MPClient_fnc_AAN,CLIENT)
            F(MPClient_fnc_addVehicle2Chain,CLIENT)
            F(MPClient_fnc_bountyReceive,CLIENT)
            JIP(MPClient_fnc_copLights,CLIENT)
            F(MPClient_fnc_copSearch,CLIENT)
            JIP(MPClient_fnc_copSiren,CLIENT)
            F(MPClient_fnc_freezePlayer,CLIENT)
            F(MPClient_fnc_gangCreated,CLIENT)
            F(MPClient_fnc_gangDisbanded,CLIENT)
            F(MPClient_fnc_gangInvite,CLIENT)
            F(MPClient_fnc_garageRefund,CLIENT)
            F(MPClient_fnc_giveDiff,CLIENT)
            F(MPClient_fnc_hideObj,CLIENT)
            F(MPClient_fnc_garageMenu,CLIENT)
            F(MPClient_fnc_jail,CLIENT)
            F(MPClient_fnc_jailMe,CLIENT)
            F(MPClient_fnc_knockedOut,CLIENT)
            F(MPClient_fnc_licenseCheck,CLIENT)
            F(MPClient_fnc_licensesRead,CLIENT)
            F(MPClient_fnc_lightHouse,CLIENT)
            JIP(MPClient_fnc_mediclights,CLIENT)
            F(MPClient_fnc_medicRequest,CLIENT)
            JIP(MPClient_fnc_medicSiren,CLIENT)
            F(MPClient_fnc_moveIn,CLIENT)
            F(MPClient_fnc_pickupItem,CLIENT)
            F(MPClient_fnc_pickupMoney,CLIENT)
            F(MPClient_fnc_receiveItem,CLIENT)
            F(MPClient_fnc_receiveMoney,CLIENT)
            F(MPClient_fnc_removeLicenses,CLIENT)
            F(MPClient_fnc_restrain,CLIENT)
            F(MPClient_fnc_revived,CLIENT)
            F(MPClient_fnc_robPerson,CLIENT)
            F(MPClient_fnc_robReceive,CLIENT)
            F(MPClient_fnc_searchClient,CLIENT)
            F(MPClient_fnc_seizeClient,CLIENT)
            F(MPClient_fnc_soundDevice,CLIENT)
            F(MPClient_fnc_spikeStripEffect,CLIENT)
            F(MPClient_fnc_tazeSound,CLIENT)
            F(MPClient_fnc_ticketPaid,CLIENT)
            F(MPClient_fnc_ticketPrompt,CLIENT)
            F(MPClient_fnc_vehicleAnimate,CLIENT)
            F(MPClient_fnc_wantedList,CLIENT)
            F(MPClient_fnc_wireTransfer,CLIENT)
            F(MPClient_fnc_gangBankResponse,CLIENT)
            F(MPClient_fnc_chopShopSold,CLIENT)
            F(MPClient_fnc_dataQuery,CLIENT)
            F(MPClient_fnc_insertPlayerInfo,CLIENT)
            F(MPClient_fnc_requestReceived,CLIENT)
            F(MPClient_fnc_updateRequest,CLIENT)
            F(MPServer_fnc_clientGangKick,CLIENT)
            F(MPServer_fnc_clientGangLeader,CLIENT)
            F(MPServer_fnc_clientGangLeft,CLIENT)
            F(MPServer_fnc_clientGetKey,CLIENT)
            F(MPClient_fnc_spat,CLIENT)
            F(MPClient_fnc_bountyHunterTaze,CLIENT)

        /* Server only functions */
            F(MPServer_fnc_rcon_ban,SERVER)
            F(MPServer_fnc_rcon_kick,SERVER)
            F(MPServer_fnc_clientMessageRequest,SERVER)
            F(MPServer_fnc_insertRequest,SERVER)
            F(MPServer_fnc_queryRequest,SERVER)
            F(MPServer_fnc_updatePartial,SERVER)
            F(MPServer_fnc_updateRequest,SERVER)
            F(MPServer_fnc_jailSys,SERVER)
            F(MPServer_fnc_wantedAdd,SERVER)
            F(MPServer_fnc_wantedBounty,SERVER)
            F(MPServer_fnc_wantedCrimes,SERVER)
            F(MPServer_fnc_wantedFetch,SERVER)
            F(MPServer_fnc_wantedProfUpdate,SERVER)
            F(MPServer_fnc_wantedRemove,SERVER)
            F(MPServer_fnc_addContainer,SERVER)
            F(MPServer_fnc_addHouse,SERVER)
            F(MPServer_fnc_chopShopSell,SERVER)
            F(MPServer_fnc_cleanupRequest,SERVER)
            F(MPServer_fnc_deleteDBContainer,SERVER)
            F(MPServer_fnc_getVehicles,SERVER)
            F(MPServer_fnc_insertGang,SERVER)
            F(MPServer_fnc_keyManagement,SERVER)
            F(MPServer_fnc_managesc,SERVER)
            F(MPServer_fnc_pickupAction,SERVER)
            F(MPServer_fnc_removeGang,SERVER)
            F(MPServer_fnc_sellHouse,SERVER)
            F(MPServer_fnc_sellHouseContainer,SERVER)
            F(MPServer_fnc_spawnVehicle,SERVER)
            F(MPServer_fnc_spikeStrip,SERVER)
            F(MPServer_fnc_updateGang,SERVER)
            F(MPServer_fnc_updateHouseContainers,SERVER)
            F(MPServer_fnc_updateHouseTrunk,SERVER)
            F(MPServer_fnc_vehicleCreate,SERVER)
            F(MPServer_fnc_vehicleDelete,SERVER)
            F(MPServer_fnc_vehicleStore,SERVER)
            F(MPServer_fnc_vehicleUpdate,SERVER)
            F(MPServer_fnc_handleBlastingCharge,SERVER)
            F(MPServer_fnc_houseGarage,SERVER)
            F(MPServer_fnc_switchSideRequest,SERVER)
            F(MPServer_fnc_tents_buildRequest,SERVER)
            F(MPServer_fnc_tents_packupRequest,SERVER)
            F(MPServer_fnc_lottery_buyTicket,SERVER)

        /* HeadlessClient only functions */
            F(HC_fnc_addContainer,HC)
            F(HC_fnc_addHouse,HC)
            F(HC_fnc_chopShopSell,HC)
            F(HC_fnc_deleteDBContainer,HC)
            F(HC_fnc_getVehicles,HC)
            F(HC_fnc_houseGarage,HC)
            F(HC_fnc_insertGang,HC)
            F(HC_fnc_insertRequest,HC)
            F(HC_fnc_insertVehicle,HC)
            F(HC_fnc_jailSys,HC)
            F(HC_fnc_keyManagement,HC)
            F(HC_fnc_queryRequest,HC)
            F(HC_fnc_removeGang,HC)
            F(HC_fnc_sellHouse,HC)
            F(HC_fnc_sellHouseContainer,HC)
            F(HC_fnc_spawnVehicle,HC)
            F(HC_fnc_spikeStrip,HC)
            F(HC_fnc_updateGang,HC)
            F(HC_fnc_updateHouseContainers,HC)
            F(HC_fnc_updateHouseTrunk,HC)
            F(HC_fnc_updatePartial,HC)
            F(HC_fnc_updateRequest,HC)
            F(HC_fnc_vehicleCreate,HC)
            F(HC_fnc_vehicleDelete,HC)
            F(HC_fnc_vehicleStore,HC)
            F(HC_fnc_vehicleUpdate,HC)
            F(HC_fnc_wantedAdd,HC)
            F(HC_fnc_wantedBounty,HC)
            F(HC_fnc_wantedCrimes,HC)
            F(HC_fnc_wantedFetch,HC)
            F(HC_fnc_wantedProfUpdate,HC)
            F(HC_fnc_wantedRemove,HC)

        /* Functions for everyone */
            F(BIS_fnc_effectKilledAirDestruction,ANYONE)
            F(BIS_fnc_effectKilledSecondaries,ANYONE)
            F(MPClient_fnc_animSync,ANYONE)
            F(MPClient_fnc_broadcast,ANYONE)
            F(MPClient_fnc_colorVehicle,ANYONE)
            F(MPClient_fnc_corpse,ANYONE)
            F(MPClient_fnc_demoChargeTimer,ANYONE)
            F(MPClient_fnc_flashbang,ANYONE)
            F(MPClient_fnc_jumpFnc,ANYONE)
            F(MPClient_fnc_lockVehicle,ANYONE)
            F(MPClient_fnc_pulloutVeh,ANYONE)
            F(MPClient_fnc_say3D,ANYONE)
            F(MPClient_fnc_setFuel,ANYONE)
            F(MPClient_fnc_simDisable,ANYONE)
            F(bis_fnc_debugconsoleexec,ANYONE)
    };

    class Commands {
        mode = 1;
        jip = 0;

        F(addHandgunItem,ANYONE)
        F(addMagazine,ANYONE)
        F(addPrimaryWeaponItem,ANYONE)
        F(addWeapon,ANYONE)
        F(setFuel,ANYONE)
    };
};

class CfgSounds {
    sounds[] = {};
    class sirenLong {
        name = "sirenLong";
        sound[] = {"\sounds\sirenLong.ogg", 1.0, 1};
        titles[] = {};
    };

    class medicSiren {
        name = "medicSiren";
        sound[] = {"\sounds\medicSiren.ogg", 1.0, 1};
        titles[] = {};
    };

    class tazerSound {
        name = "tazerSound";
        sound[] = {"\sounds\tazer.ogg", 0.5, 1};
        titles[] = {};
    };

    class flashbang {
        name = "flashbang";
        sound[] = {"\sounds\flashbang.ogg", 1.0, 1};
        titles[] = {};
    };

    class mining {
        name = "mining";
        sound[] = {"\sounds\mining.ogg", 1.0, 1};
        titles[] = {};
    };

    class harvest {
        name = "harvest";
        sound[] = {"\sounds\harvest.ogg", 1.0, 1};
        titles[] = {};
    };

    class lockCarSound {
        name = "lockCarSound";
        sound[] = {"\sounds\carLock.ogg", 1.0, 1};
        titles[] = {};
    };

    class unlockCarSound {
        name = "unlockCarSound";
        sound[] = {"\sounds\carUnlock.ogg", 0.75, 1};
        titles[] = {};
    };

    class byebye {
        name = "byebye";
        sound[] = {"\sounds\byebye.ogg", 0.75, 1};
        titles[] = {};
    };

    class intro {
        name = "intro";
        sound[] = {"\sounds\intro.ogg", 0.75, 1};
        titles[] = {};
    };

    class cuffson {
        name = "cuffson";
        sound[] = {"\sounds\Handcuffs.ogg", 1.0, 1};
        titles[] = {};
    };

    class zipTie {
        name = "zipTie";
        sound[] = {"\sounds\ziptie.ogg", 1.0, 1};
        titles[] = {};
    };
};

class CfgDebriefing {
    class NotWhitelisted {
        title = "$STR_NotWhitelisted_Title";
        subtitle = "$STR_NotWhitelisted_SubTitle";
        description = "$STR_NotWhitelisted_Descript";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0,0.3,0.6,1};
    };

    class Blacklisted {
        title = "$STR_Blacklisted_Title";
        subtitle = "$STR_Blacklisted_SubTitle";
        description = "$STR_Blacklisted_Descript";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0,0.3,0.6,1};
    };

    class Antihack {
        title = "Antihack";
        subtitle = "Nobody likes a hacker";
        description = "You have been flagged for hacking";
        pictureBackground = "";
        picture = "";
        pictureColor[] = {0,0.3,0.6,1};
    };
};

class CfgNotifications {
    class MedicalRequestEmerg {
        title = "$STR_MedicalRequestEmerg_Title";
        iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";
        description = "%1";
        duration = 5;
        priority = 7;
    };

    class DeliveryAssigned {
        title = "$STR_DeliveryAssigned_Title";
        iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";
        description = "%1";
        duration = 10;
        priority = 7;
    };

    class DeliveryFailed {
        title = "$STR_DeliveryFailed_Title";
        iconPicture = "\A3\ui_f\data\map\mapcontrol\taskiconfailed_ca.paa";
        description = "%1";
        duration = 7;
        priority = 7;
    };

    class DeliverySucceeded {
        title = "$STR_DeliverySucceeded_Title";
        iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcondone_ca.paa";
        description = "%1";
        duration = 6;
        priority = 6;
    };

    class TextMessage {
        title = "$STR_TextMessage_Title";
        iconPicture = "icons\ico_messageNew.paa";
        description = "%1";
        duration = 10;
        priority = 6;
    };

    class PoliceDispatch {
        title = "$STR_PoliceDispatch_Title";
        iconPicture = "icons\ico_messagePolice.paa";
        description = "%1";
        duration = 10;
        priority = 6;
    };

    class AdminDispatch {
        title = "$STR_AdminDispatch_Title";
        iconPicture = "icons\ico_messageAdmin.paa";
        description = "%1";
        duration = 10;
        priority = 6;
    };

    class AdminMessage {
        title = "$STR_AdminMessage_Title";
        iconPicture = "icons\ico_messageAdmin.paa";
        description = "%1";
        duration = 10;
        priority = 5;
    };
};